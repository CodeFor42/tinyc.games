!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABOVE_GROUND	blocko.c	166;"	d	file:
AT_GROUND	blocko.c	167;"	d	file:
BARR	blocko.c	90;"	d	file:
BELOW_GROUND	blocko.c	168;"	d	file:
BS	blocko.c	51;"	d	file:
BS2	blocko.c	52;"	d	file:
CHUNKD	blocko.c	42;"	d	file:
CHUNKD2	blocko.c	44;"	d	file:
CHUNKW	blocko.c	41;"	d	file:
CHUNKW2	blocko.c	43;"	d	file:
CLAMP	blocko.c	105;"	d	file:
CORN_	blocko.c	160;"	d	file:
DAY_B	blocko.c	115;"	d	file:
DAY_G	blocko.c	114;"	d	file:
DAY_R	blocko.c	113;"	d	file:
DIRT	blocko.c	83;"	d	file:
DIST	blocko.c	172;"	d	file:
DIST_SQ	blocko.c	171;"	d	file:
DOWN	blocko.c	74;"	d	file:
DUSK_B	blocko.c	121;"	d	file:
DUSK_G	blocko.c	120;"	d	file:
DUSK_R	blocko.c	119;"	d	file:
EAST	blocko.c	70;"	d	file:
EYEDOWN	blocko.c	58;"	d	file:
FOG_DAY_B	blocko.c	124;"	d	file:
FOG_DAY_G	blocko.c	123;"	d	file:
FOG_DAY_R	blocko.c	122;"	d	file:
FOG_DUSK_B	blocko.c	127;"	d	file:
FOG_DUSK_G	blocko.c	126;"	d	file:
FOG_DUSK_R	blocko.c	125;"	d	file:
FOG_NIGHT_B	blocko.c	130;"	d	file:
FOG_NIGHT_G	blocko.c	129;"	d	file:
FOG_NIGHT_R	blocko.c	128;"	d	file:
FONT_BUFLEN	font.c	13;"	d	file:
FONT_CH_H	font.c	10;"	d	file:
FONT_CH_W	font.c	9;"	d	file:
FONT_LINES	font.c	12;"	d	file:
FONT_PITCH	font.c	11;"	d	file:
GL3_PROTOTYPES	blocko.c	14;"	d	file:
GLOQLEN	blocko.c	103;"	d	file:
GLO_	blocko.c	159;"	d	file:
GRAN	blocko.c	80;"	d	file:
GRAS	blocko.c	88;"	d	file:
GRAV_FLOAT	blocko.c	65;"	d	file:
GRAV_JUMP	blocko.c	64;"	d	file:
GRAV_MAX	blocko.c	67;"	d	file:
GRAV_ZERO	blocko.c	66;"	d	file:
GRG1	blocko.c	86;"	d	file:
GRG2	blocko.c	87;"	d	file:
H	blocko.c	40;"	d	file:
HARD	blocko.c	79;"	d	file:
ICLAMP	blocko.c	106;"	d	file:
IS_OPAQUE	blocko.c	164;"	d	file:
IS_SOLID	blocko.c	165;"	d	file:
JUMP_BUFFER_FRAMES	blocko.c	63;"	d	file:
KORN_	blocko.c	161;"	d	file:
LASTSOLID	blocko.c	92;"	d	file:
LITE	blocko.c	95;"	d	file:
MAX	blocko.c	107;"	d	file:
MAX_CAVE_POINTS	blocko.c	1109;"	d	file:
MIN	blocko.c	108;"	d	file:
MessageCallback	blocko.c	/^MessageCallback(GLenum source, GLenum type, GLuint id, GLenum severity,$/;"	f
NAMES	timer.c	/^        NAMES$/;"	e	enum:timernames	file:
NAMES	timer.c	22;"	d	file:
NAMES	timer.c	52;"	d	file:
NIGHT_B	blocko.c	118;"	d	file:
NIGHT_G	blocko.c	117;"	d	file:
NIGHT_R	blocko.c	116;"	d	file:
NORTH	blocko.c	71;"	d	file:
NR_PLAYERS	blocko.c	62;"	d	file:
OPEN	blocko.c	93;"	d	file:
ORE	blocko.c	77;"	d	file:
OREH	blocko.c	78;"	d	file:
PLYR_H	blocko.c	54;"	d	file:
PLYR_SPD	blocko.c	55;"	d	file:
PLYR_SPD_R	blocko.c	56;"	d	file:
PLYR_SPD_S	blocko.c	57;"	d	file:
PLYR_W	blocko.c	53;"	d	file:
PNG0	blocko.c	547;"	d	file:
QCAVE	blocko.c	1110;"	d	file:
QITEM	blocko.c	170;"	d	file:
RAND	blocko.c	177;"	d	file:
RAND01	blocko.c	179;"	d	file:
RANDBOOL	blocko.c	187;"	d	file:
RANDF	blocko.c	183;"	d	file:
RANDI	blocko.c	181;"	d	file:
RANDP	blocko.c	185;"	d	file:
REGD	blocko.c	1088;"	d	file:
REGW	blocko.c	1087;"	d	file:
RLEF	blocko.c	97;"	d	file:
SAND	blocko.c	82;"	d	file:
SCALE	blocko.c	38;"	d	file:
SDL_DISABLE_IMMINTRIN_H	blocko.c	22;"	d	file:
SEED1	blocko.c	189;"	d	file:
SEED2	blocko.c	190;"	d	file:
SEED3	blocko.c	191;"	d	file:
SEED4	blocko.c	192;"	d	file:
SOUTH	blocko.c	73;"	d	file:
STARTPX	blocko.c	59;"	d	file:
STARTPY	blocko.c	60;"	d	file:
STARTPZ	blocko.c	61;"	d	file:
STBI_NO_SIMD	blocko.c	24;"	d	file:
STB_IMAGE_IMPLEMENTATION	blocko.c	25;"	d	file:
STON	blocko.c	76;"	d	file:
SUNQLEN	blocko.c	102;"	d	file:
SUN_	blocko.c	158;"	d	file:
TEST_AREA_SZ	blocko.c	194;"	d	file:
TILESD	blocko.c	50;"	d	file:
TILESH	blocko.c	49;"	d	file:
TILESW	blocko.c	48;"	d	file:
TIMECALL	timer.c	11;"	d	file:
TIMER	timer.c	3;"	d	file:
T_	blocko.c	157;"	d	file:
UP	blocko.c	69;"	d	file:
VAOD	blocko.c	46;"	d	file:
VAOS	blocko.c	47;"	d	file:
VAOW	blocko.c	45;"	d	file:
VERTEX_BUFLEN	blocko.c	101;"	d	file:
W	blocko.c	39;"	d	file:
WATR	blocko.c	94;"	d	file:
WEST	blocko.c	72;"	d	file:
WOOD	blocko.c	84;"	d	file:
WinMain	blocko.c	/^int WinMain()$/;"	f
X	timer.c	39;"	d	file:
X	timer.c	41;"	d	file:
X	timer.c	46;"	d	file:
X	timer.c	48;"	d	file:
YLEF	blocko.c	98;"	d	file:
alpha	blocko.c	/^        float alpha;$/;"	m	struct:vbufv	file:
already_generated	blocko.c	/^volatile char already_generated[VAOW][VAOD];$/;"	v
antialiasing	blocko.c	/^int antialiasing = false;$/;"	v
block_collide	blocko.c	/^int block_collide(int bx, int by, int bz, struct box box, int wet)$/;"	f
box	blocko.c	/^struct box { float x, y, z, w, h ,d; };$/;"	s	file:
breaking	blocko.c	/^        int breaking;$/;"	m	struct:player	file:
build_test_area	blocko.c	/^void build_test_area()$/;"	f
building	blocko.c	/^        int building;$/;"	m	struct:player	file:
camplayer	blocko.c	/^struct player camplayer;$/;"	v	typeref:struct:player
check_program_errors	shader.c	/^int check_program_errors(GLuint shader, char *name)$/;"	f
check_shader_errors	shader.c	/^int check_shader_errors(GLuint shader, char *name)$/;"	f
chunk_builder	blocko.c	/^void chunk_builder()$/;"	f
chunk_gen_ticks	blocko.c	/^int chunk_gen_ticks = 0;$/;"	v
collide	blocko.c	/^int collide(struct box l, struct box r)$/;"	f
cooldown	blocko.c	/^        int cooldown;$/;"	m	struct:player	file:
cooldownf	blocko.c	/^        int cooldownf;$/;"	m	struct:player	file:
cornlight	blocko.c	/^float *cornlight;$/;"	v
create_hmap	blocko.c	/^void create_hmap()$/;"	f
ctx	blocko.c	/^SDL_GLContext ctx;$/;"	v
d	blocko.c	/^struct box { float x, y, z, w, h ,d; };$/;"	m	struct:box	file:
debrief	blocko.c	/^void debrief()$/;"	f
draw_stuff	blocko.c	/^void draw_stuff()$/;"	f
dumb_rand	blocko.c	/^unsigned int dumb_rand(int *seed) { return (*seed = (1103515245 * *seed + 12345) % 2147483648); }$/;"	f
event	blocko.c	/^SDL_Event event;$/;"	v
false	blocko.c	111;"	d	file:
fast	blocko.c	/^float fast = 1.f;$/;"	v
fog_b	blocko.c	/^float fog_r, fog_g, fog_b;$/;"	v
fog_g	blocko.c	/^float fog_r, fog_g, fog_b;$/;"	v
fog_r	blocko.c	/^float fog_r, fog_g, fog_b;$/;"	v
font_add_text	font.c	/^void font_add_text(char *s, int inx, int iny)$/;"	f
font_begin	font.c	/^void font_begin(int w, int h)$/;"	f
font_buf	font.c	/^float font_buf[FONT_BUFLEN + 100];$/;"	v
font_buf_limit	font.c	/^float *font_buf_limit = font_buf + FONT_BUFLEN;$/;"	v
font_buf_p	font.c	/^float *font_buf_p = font_buf;$/;"	v
font_end	font.c	/^void font_end(float r, float g, float b)$/;"	f
font_init	font.c	/^void font_init()$/;"	f
font_prog_id	font.c	/^unsigned int font_prog_id;$/;"	v
font_screenh	font.c	/^int font_screenh;$/;"	v
font_screenw	font.c	/^int font_screenw;$/;"	v
font_spacing	font.c	/^int font_spacing[256] = { 6,3,5,7,7,6,7,3,5,5,6,7,3,6,3,6,$/;"	v
font_tex_id	font.c	/^GLuint font_tex_id;$/;"	v
font_vao	font.c	/^GLuint font_vbo, font_vao;$/;"	v
font_vbo	font.c	/^GLuint font_vbo, font_vao;$/;"	v
frame	blocko.c	/^int frame = 0;$/;"	v
fvel	blocko.c	/^        int fvel;$/;"	m	struct:player	file:
gen_chunk	blocko.c	/^void gen_chunk(int xlo, int xhi, int zlo, int zhi)$/;"	f
gen_hmap	blocko.c	/^void gen_hmap(int x0, int x2, int z0, int z2)$/;"	f
glo_enqueue	blocko.c	/^void glo_enqueue(int x, int y, int z, int base, unsigned char incoming_light)$/;"	f
glolight	blocko.c	/^unsigned char *glolight;$/;"	v
gloq0_	blocko.c	/^struct qitem gloq0_[GLOQLEN+1];$/;"	v	typeref:struct:qitem
gloq1_	blocko.c	/^struct qitem gloq1_[GLOQLEN+1];$/;"	v	typeref:struct:qitem
gloq_curr	blocko.c	/^struct qitem *gloq_curr = gloq0_;$/;"	v	typeref:struct:qitem
gloq_next	blocko.c	/^struct qitem *gloq_next = gloq1_;$/;"	v	typeref:struct:qitem
gloq_outta_room	blocko.c	/^int gloq_outta_room = 0;$/;"	v
glow0	blocko.c	/^        float glow0, glow1, glow2, glow3;$/;"	m	struct:vbufv	file:
glow1	blocko.c	/^        float glow0, glow1, glow2, glow3;$/;"	m	struct:vbufv	file:
glow2	blocko.c	/^        float glow0, glow1, glow2, glow3;$/;"	m	struct:vbufv	file:
glow3	blocko.c	/^        float glow0, glow1, glow2, glow3;$/;"	m	struct:vbufv	file:
glsetup	blocko.c	/^void glsetup()$/;"	f
gndheight	blocko.c	/^unsigned char gndheight[TILESW][TILESD];$/;"	v
goingb	blocko.c	/^        int goingb;$/;"	m	struct:player	file:
goingf	blocko.c	/^        int goingf;$/;"	m	struct:player	file:
goingl	blocko.c	/^        int goingl;$/;"	m	struct:player	file:
goingr	blocko.c	/^        int goingr;$/;"	m	struct:player	file:
gq_curr_len	blocko.c	/^size_t gq_curr_len;$/;"	v
gq_next_len	blocko.c	/^size_t gq_next_len;$/;"	v
grav	blocko.c	/^        int grav;$/;"	m	struct:player	file:
gravity	blocko.c	/^int gravity[] = { -20, -17, -14, -12, -10, -8, -6, -5, -4, -3,$/;"	v
ground	blocko.c	/^        int ground;$/;"	m	struct:player	file:
h	blocko.c	/^struct box { float x, y, z, w, h ,d; };$/;"	m	struct:box	file:
help_layer	blocko.c	/^int help_layer = 1;$/;"	v
hmap	blocko.c	/^float hmap[TILESW][TILESD];$/;"	v
hmap2	blocko.c	/^float hmap2[TILESW][TILESD];$/;"	v
illum0	blocko.c	/^        float illum0, illum1, illum2, illum3;$/;"	m	struct:vbufv	file:
illum1	blocko.c	/^        float illum0, illum1, illum2, illum3;$/;"	m	struct:vbufv	file:
illum2	blocko.c	/^        float illum0, illum1, illum2, illum3;$/;"	m	struct:vbufv	file:
illum3	blocko.c	/^        float illum0, illum1, illum2, illum3;$/;"	m	struct:vbufv	file:
in_test_area	blocko.c	/^int in_test_area(int x, int y, int z)$/;"	f
init_player	blocko.c	/^void init_player()$/;"	f
jump	blocko.c	/^void jump(int down)$/;"	f
jumping	blocko.c	/^        int jumping;$/;"	m	struct:player	file:
just_gen_len	blocko.c	/^volatile size_t just_gen_len;$/;"	v
just_generated	blocko.c	/^volatile struct qitem just_generated[VAOW*VAOD];$/;"	v	typeref:struct:qitem
key_move	blocko.c	/^void key_move(int down)$/;"	f
kornlight	blocko.c	/^float *kornlight;$/;"	v
legit_tile	blocko.c	/^int legit_tile(int x, int y, int z)$/;"	f
lerp	blocko.c	/^float lerp(float t, float a, float b) { return a + t * (b - a); }$/;"	f
lerp_camera	blocko.c	/^void lerp_camera(float t, struct player *a, struct player *b)$/;"	f
lerped_pos	blocko.c	/^struct point lerped_pos;$/;"	v	typeref:struct:point
lighting	blocko.c	/^        int lighting;$/;"	m	struct:player	file:
load_shaders	shader.c	/^void load_shaders()$/;"	f
lock_culling	blocko.c	/^int lock_culling;$/;"	v
main_loop	blocko.c	/^void main_loop()$/;"	f
mat4_f3_multiply	matrix.c	/^void mat4_f3_multiply(float *result, float *m, float x, float y, float z)$/;"	f
mat4_multiply	matrix.c	/^void mat4_multiply(float *result, float *a, float *b)$/;"	f
mat4_print	matrix.c	/^void mat4_print(float *a)$/;"	f
material_tex_id	blocko.c	/^GLuint material_tex_id;$/;"	v
mouse_button	blocko.c	/^void mouse_button(int down)$/;"	f
mouse_move	blocko.c	/^void mouse_move()$/;"	f
mouselook	blocko.c	/^int mouselook = true;$/;"	v
move_player	blocko.c	/^int move_player(struct player *p, int velx, int vely, int velz)$/;"	f
move_to_ground	blocko.c	/^void move_to_ground(float *inout, int x, int y, int z)$/;"	f
new_game	blocko.c	/^void new_game()$/;"	f
night_amt	blocko.c	/^float night_amt = 0.f;$/;"	v
night_mode	blocko.c	/^int night_mode = 0;$/;"	v
noise	blocko.c	36;"	d	file:
noisy	blocko.c	/^int noisy = false;$/;"	v
nr_chunks_generated	blocko.c	/^int nr_chunks_generated = 0;$/;"	v
omp_threads	blocko.c	/^int omp_threads = 0;$/;"	v
orient	blocko.c	/^        float orient;$/;"	m	struct:vbufv	file:
osn_context	blocko.c	/^struct osn_context *osn_context;$/;"	v	typeref:struct:osn_context
pframe	blocko.c	/^int pframe = 0;$/;"	v
pitch	blocko.c	/^        float pitch;$/;"	m	struct:player	file:
place_x	blocko.c	/^int place_x, place_y, place_z;$/;"	v
place_y	blocko.c	/^int place_x, place_y, place_z;$/;"	v
place_z	blocko.c	/^int place_x, place_y, place_z;$/;"	v
player	blocko.c	/^struct player player[NR_PLAYERS];$/;"	v	typeref:struct:player
player	blocko.c	/^struct player {$/;"	s	file:
point	blocko.c	/^struct point { float x, y, z; };$/;"	s	file:
polys	blocko.c	/^int polys = 0;$/;"	v
pos	blocko.c	/^        struct box pos;$/;"	m	struct:player	typeref:struct:player::box	file:
prog_id	shader.c	/^unsigned int prog_id;$/;"	v
qcave	blocko.c	/^struct qcave { int x, y, z; int radius_sq; };$/;"	s	file:
qchunk	blocko.c	/^struct qchunk { int x, y, z, sqdist; };$/;"	s	file:
qitem	blocko.c	/^struct qitem { int x, y, z; };$/;"	s	file:
radius_sq	blocko.c	/^struct qcave { int x, y, z; int radius_sq; };$/;"	m	struct:qcave	file:
rayshot	blocko.c	/^void rayshot(float eye0, float eye1, float eye2, float f0, float f1, float f2)$/;"	f
recalc_corner_lighting	blocko.c	/^void recalc_corner_lighting(int xlo, int xhi, int zlo, int zhi)$/;"	f
recalc_gndheight	blocko.c	/^void recalc_gndheight(int x, int z)$/;"	f
regulated	blocko.c	/^int regulated = false;$/;"	v
remove_glolight	blocko.c	/^void remove_glolight(int px, int py, int pz)$/;"	f
remove_sunlight	blocko.c	/^void remove_sunlight(int px, int py, int pz)$/;"	f
resize	blocko.c	/^void resize()$/;"	f
running	blocko.c	/^        int running;$/;"	m	struct:player	file:
runningf	blocko.c	/^        int runningf;$/;"	m	struct:player	file:
rvel	blocko.c	/^        int rvel;$/;"	m	struct:player	file:
screenh	blocko.c	/^int screenh = H;$/;"	v
screenw	blocko.c	/^int screenw = W;$/;"	v
set_gndheight	blocko.c	/^void set_gndheight(int x, int y, int z)$/;"	f
show_fresh_updates	blocko.c	/^int show_fresh_updates = false;$/;"	v
show_light_values	blocko.c	/^int show_light_values = false;$/;"	v
show_time_per_chunk	blocko.c	/^int show_time_per_chunk = false;$/;"	v
smooth_hmap	blocko.c	/^void smooth_hmap()$/;"	f
sneaking	blocko.c	/^        int sneaking;$/;"	m	struct:player	file:
sorter	blocko.c	/^int sorter(const void * _a, const void * _b)$/;"	f
sq_curr_len	blocko.c	/^size_t sq_curr_len;$/;"	v
sq_next_len	blocko.c	/^size_t sq_next_len;$/;"	v
sqdist	blocko.c	/^struct qchunk { int x, y, z, sqdist; };$/;"	m	struct:qchunk	file:
startup	blocko.c	/^void startup()$/;"	f
step_glolight	blocko.c	/^int step_glolight()$/;"	f
step_sunlight	blocko.c	/^int step_sunlight()$/;"	f
sun_enqueue	blocko.c	/^void sun_enqueue(int x, int y, int z, int base, unsigned char incoming_light)$/;"	f
sunlight	blocko.c	/^unsigned char *sunlight;$/;"	v
sunq0_	blocko.c	/^struct qitem sunq0_[SUNQLEN+1];$/;"	v	typeref:struct:qitem
sunq1_	blocko.c	/^struct qitem sunq1_[SUNQLEN+1];$/;"	v	typeref:struct:qitem
sunq_curr	blocko.c	/^struct qitem *sunq_curr = sunq0_;$/;"	v	typeref:struct:qitem
sunq_next	blocko.c	/^struct qitem *sunq_next = sunq1_;$/;"	v	typeref:struct:qitem
sunq_outta_room	blocko.c	/^int sunq_outta_room = 0;$/;"	v
target_x	blocko.c	/^int target_x, target_y, target_z;$/;"	v
target_y	blocko.c	/^int target_x, target_y, target_z;$/;"	v
target_z	blocko.c	/^int target_x, target_y, target_z;$/;"	v
test_area_x	blocko.c	/^int test_area_x = -1;$/;"	v
test_area_y	blocko.c	/^int test_area_y;$/;"	v
test_area_z	blocko.c	/^int test_area_z;$/;"	v
tex	blocko.c	/^        float tex;$/;"	m	struct:vbufv	file:
tiles	blocko.c	/^unsigned char *tiles;$/;"	v
timer_	timer.c	/^        timer_$/;"	e	enum:timernames	file:
timer_curr_id	timer.c	/^int timer_curr_id = timer_;$/;"	v
timer_print	timer.c	/^void timer_print()$/;"	f
timer_then	timer.c	/^long long int timer_then = 0;$/;"	v
timer_times	timer.c	/^long long int timer_times[timer_ + 1] = { 0 };$/;"	v
timernames	timer.c	/^enum timernames {$/;"	g	file:
timernamesprint	timer.c	/^char timernamesprint[][80] = {$/;"	v
true	blocko.c	110;"	d	file:
update_player	blocko.c	/^void update_player(struct player *p, int real)$/;"	f
update_world	blocko.c	/^void update_world()$/;"	f
v	blocko.c	/^struct vbufv *v = vbuf;$/;"	v	typeref:struct:vbufv
v_limit	blocko.c	/^struct vbufv *v_limit = vbuf + VERTEX_BUFLEN;$/;"	v	typeref:struct:vbufv
vao	blocko.c	/^unsigned int vbo[VAOS], vao[VAOS];$/;"	v
vbo	blocko.c	/^unsigned int vbo[VAOS], vao[VAOS];$/;"	v
vbo_len	blocko.c	/^size_t vbo_len[VAOS];$/;"	v
vbuf	blocko.c	/^struct vbufv vbuf[VERTEX_BUFLEN + 1000]; \/\/ vertex buffer + padding$/;"	v	typeref:struct:vbufv
vbufv	blocko.c	/^struct vbufv { \/\/ vertex buffer vertex$/;"	s	file:
vel	blocko.c	/^        struct point vel;$/;"	m	struct:player	typeref:struct:player::point	file:
vsync	blocko.c	/^int vsync = true;$/;"	v
w	blocko.c	/^struct box { float x, y, z, w, h ,d; };$/;"	m	struct:box	file:
w	blocko.c	/^struct vbufv *w = wbuf;$/;"	v	typeref:struct:vbufv
w_limit	blocko.c	/^struct vbufv *w_limit = wbuf + VERTEX_BUFLEN;$/;"	v	typeref:struct:vbufv
wbuf	blocko.c	/^struct vbufv wbuf[VERTEX_BUFLEN + 1000]; \/\/ water buffer$/;"	v	typeref:struct:vbufv
wet	blocko.c	/^        int wet;$/;"	m	struct:player	file:
win	blocko.c	/^SDL_Window *win;$/;"	v
world_collide	blocko.c	/^int world_collide(struct box box, int wet)$/;"	f
world_seed	blocko.c	/^int world_seed = 160659;$/;"	v
x	blocko.c	/^        float x, y, z;$/;"	m	struct:vbufv	file:
x	blocko.c	/^struct box { float x, y, z, w, h ,d; };$/;"	m	struct:box	file:
x	blocko.c	/^struct point { float x, y, z; };$/;"	m	struct:point	file:
x	blocko.c	/^struct qcave { int x, y, z; int radius_sq; };$/;"	m	struct:qcave	file:
x	blocko.c	/^struct qchunk { int x, y, z, sqdist; };$/;"	m	struct:qchunk	file:
x	blocko.c	/^struct qitem { int x, y, z; };$/;"	m	struct:qitem	file:
y	blocko.c	/^        float x, y, z;$/;"	m	struct:vbufv	file:
y	blocko.c	/^struct box { float x, y, z, w, h ,d; };$/;"	m	struct:box	file:
y	blocko.c	/^struct point { float x, y, z; };$/;"	m	struct:point	file:
y	blocko.c	/^struct qcave { int x, y, z; int radius_sq; };$/;"	m	struct:qcave	file:
y	blocko.c	/^struct qchunk { int x, y, z, sqdist; };$/;"	m	struct:qchunk	file:
y	blocko.c	/^struct qitem { int x, y, z; };$/;"	m	struct:qitem	file:
yaw	blocko.c	/^        float yaw;$/;"	m	struct:player	file:
z	blocko.c	/^        float x, y, z;$/;"	m	struct:vbufv	file:
z	blocko.c	/^struct box { float x, y, z, w, h ,d; };$/;"	m	struct:box	file:
z	blocko.c	/^struct point { float x, y, z; };$/;"	m	struct:point	file:
z	blocko.c	/^struct qcave { int x, y, z; int radius_sq; };$/;"	m	struct:qcave	file:
z	blocko.c	/^struct qchunk { int x, y, z, sqdist; };$/;"	m	struct:qchunk	file:
z	blocko.c	/^struct qitem { int x, y, z; };$/;"	m	struct:qitem	file:
zoom_amt	blocko.c	/^float zoom_amt = 1.f;$/;"	v
zooming	blocko.c	/^int zooming = false;$/;"	v
